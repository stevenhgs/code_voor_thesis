{
    "settings": {
        "beam size": 5,
        "min significance": 0,
        "nb pages": 5,
        "all pdf names": [
            "BF1_0",
            "BF1_1",
            "BF1_2",
            "BF1_3",
            "BF1_4"
        ],
        "nb pages filtered": 5,
        "all filtered names": [
            "BF1_0",
            "BF1_1",
            "BF1_2",
            "BF1_3",
            "BF1_4"
        ]
    },
    "data": {
        "1": {
            "scores": {
                "DirectlyFollows": {
                    "nb_true_positives": 0,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 36,
                    "f1_score": 0.0
                },
                "Together": {
                    "nb_true_positives": 0,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 69,
                    "f1_score": 0.0
                }
            },
            "time": 0.009013652801513672,
            "selected slide": "BF1_1",
            "selected slides:": [
                "BF1_1"
            ],
            "selected heuristic value": [
                0.0,
                -Infinity,
                -28
            ],
            "rules": {
                "DirectlyFollows": [],
                "Together": []
            },
            "filtered rules": {
                "DirectlyFollows": [],
                "Together": []
            },
            "order_data": {
                "BF1_0": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_1": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ],
                        [
                            12
                        ],
                        [
                            13
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_2": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            9,
                            10,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_3": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_4": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                }
            }
        },
        "2": {
            "scores": {
                "DirectlyFollows": {
                    "nb_true_positives": 27,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 9,
                    "f1_score": 0.8571428571428571
                },
                "Together": {
                    "nb_true_positives": 69,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 0,
                    "f1_score": 1.0
                }
            },
            "time": 3.2308804988861084,
            "selected slide": "BF1_0",
            "selected slides:": [
                "BF1_1",
                "BF1_0"
            ],
            "selected heuristic value": [
                0.003662109375,
                -Infinity,
                -24
            ],
            "rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimBeforeClosest('P1', 'P0') \u2227 YDimCovers('P0', 'P2')",
                        5.970884983233527
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimEquals('P2', 'P0') \u2227 YDimBefore('P1', 'P3')",
                        19.902949944111757
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P2')",
                        1.9902949944111759
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 YDimCovers('P0', 'P2')",
                        1.9902949944111759
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimBefore('P1', 'P0') \u2227 YDimEquals('P0', 'P1')",
                        1.9902949944111759
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimCovers('P0', 'P2') \u2227 YDimBefore('P0', 'P1') \u2227 Text('P1',)",
                        3.9805899888223517
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- XDimEquals('P0', 'P2') \u2227 Text('P1',)",
                        21.631746316270064
                    ],
                    [
                        "Together('P0', 'P1') <-- ClosestUnderAnd2DimCovered('P1', 'P2') \u2227 YDimOverlapsStart('P0', 'P2')",
                        2.1631746316270064
                    ],
                    [
                        "Together('P0', 'P1') <-- \u00acImage('P1',) \u2227 ClosestUnderAndOverlap('P0', 'P2') \u2227 XDimOverlapsStart('P2', 'P0')",
                        8.652698526508026
                    ]
                ]
            },
            "filtered rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimBeforeClosest('P1', 'P0') \u2227 YDimCovers('P0', 'P2')",
                        5.970884983233527
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimEquals('P2', 'P0') \u2227 YDimBefore('P1', 'P3')",
                        19.902949944111757
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P2')",
                        1.9902949944111759
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 YDimCovers('P0', 'P2')",
                        1.9902949944111759
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimBefore('P1', 'P0') \u2227 YDimEquals('P0', 'P1')",
                        1.9902949944111759
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimCovers('P0', 'P2') \u2227 YDimBefore('P0', 'P1') \u2227 Text('P1',)",
                        3.9805899888223517
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- XDimEquals('P0', 'P2') \u2227 Text('P1',)",
                        21.631746316270064
                    ],
                    [
                        "Together('P0', 'P1') <-- ClosestUnderAnd2DimCovered('P1', 'P2') \u2227 YDimOverlapsStart('P0', 'P2')",
                        2.1631746316270064
                    ],
                    [
                        "Together('P0', 'P1') <-- \u00acImage('P1',) \u2227 ClosestUnderAndOverlap('P0', 'P2') \u2227 XDimOverlapsStart('P2', 'P0')",
                        8.652698526508026
                    ]
                ]
            },
            "order_data": {
                "BF1_0": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10,
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_1": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ],
                        [
                            12
                        ],
                        [
                            13
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ],
                        [
                            12
                        ],
                        [
                            13
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_2": {
                    "sequential_order_found_examples": [
                        [
                            9,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            10,
                            5
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            9,
                            10,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_3": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_4": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9,
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                }
            }
        },
        "3": {
            "scores": {
                "DirectlyFollows": {
                    "nb_true_positives": 36,
                    "nb_false_positives": 1,
                    "nb_false_negatives": 0,
                    "f1_score": 0.9863013698630136
                },
                "Together": {
                    "nb_true_positives": 69,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 0,
                    "f1_score": 1.0
                }
            },
            "time": 9.40048360824585,
            "selected slide": "BF1_3",
            "selected slides:": [
                "BF1_1",
                "BF1_0",
                "BF1_3"
            ],
            "selected heuristic value": [
                0.005126953125,
                2.0,
                -24
            ],
            "rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 ClosestUnderAndOverlap('P1', 'P2')",
                        6.8359885572009516
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimBeforeClosest('P1', 'P0') \u2227 YDimCovers('P0', 'P2')",
                        6.8359885572009516
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P2') \u2227 XDimBeforeClosest('P1', 'P0')",
                        2.278662852400317
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimEquals('P0', 'P2') \u2227 Text('P1',)",
                        18.229302819202537
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimBeforeClosest('P2', 'P0') \u2227 YDimCovers('P0', 'P1')",
                        2.278662852400317
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimCovers('P0', 'P2') \u2227 Text('P1',)",
                        6.8359885572009516
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- Text('P1',) \u2227 XDimCovers('P1', 'P0') \u2227 \u00acText('P0',)",
                        9.114651409601269
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- XDimEquals('P0', 'P2') \u2227 \u00acImage('P1',)",
                        40.56961756458441
                    ],
                    [
                        "Together('P0', 'P1') <-- ClosestUnderAnd2DimCovered('P1', 'P2') \u2227 YDimOverlapsStart('P0', 'P2')",
                        4.056961756458441
                    ],
                    [
                        "Together('P0', 'P1') <-- XDimCovers('P0', 'P1') \u2227 \u00acOnTop('P1', 'P0') \u2227 YDimOverlapsStart('P0', 'P2')",
                        16.227847025833764
                    ]
                ]
            },
            "filtered rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 ClosestUnderAndOverlap('P1', 'P2')",
                        6.8359885572009516
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimBeforeClosest('P1', 'P0') \u2227 YDimCovers('P0', 'P2')",
                        6.8359885572009516
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P2') \u2227 XDimBeforeClosest('P1', 'P0')",
                        2.278662852400317
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimEquals('P0', 'P2') \u2227 Text('P1',)",
                        18.229302819202537
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimBeforeClosest('P2', 'P0') \u2227 YDimCovers('P0', 'P1')",
                        2.278662852400317
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimCovers('P0', 'P2') \u2227 Text('P1',)",
                        6.8359885572009516
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- Text('P1',) \u2227 XDimCovers('P1', 'P0') \u2227 \u00acText('P0',)",
                        9.114651409601269
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- XDimEquals('P0', 'P2') \u2227 \u00acImage('P1',)",
                        40.56961756458441
                    ],
                    [
                        "Together('P0', 'P1') <-- ClosestUnderAnd2DimCovered('P1', 'P2') \u2227 YDimOverlapsStart('P0', 'P2')",
                        4.056961756458441
                    ],
                    [
                        "Together('P0', 'P1') <-- XDimCovers('P0', 'P1') \u2227 \u00acOnTop('P1', 'P0') \u2227 YDimOverlapsStart('P0', 'P2')",
                        16.227847025833764
                    ]
                ]
            },
            "order_data": {
                "BF1_0": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_1": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ],
                        [
                            12
                        ],
                        [
                            13
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ],
                        [
                            12
                        ],
                        [
                            13
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_2": {
                    "sequential_order_found_examples": [
                        [
                            9,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            10,
                            5
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            9,
                            10,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": [
                        [
                            6,
                            4
                        ]
                    ]
                },
                "BF1_3": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_4": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                }
            }
        },
        "4": {
            "scores": {
                "DirectlyFollows": {
                    "nb_true_positives": 36,
                    "nb_false_positives": 1,
                    "nb_false_negatives": 0,
                    "f1_score": 0.9863013698630136
                },
                "Together": {
                    "nb_true_positives": 69,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 0,
                    "f1_score": 1.0
                }
            },
            "time": 17.479374170303345,
            "selected slide": "BF1_2",
            "selected slides:": [
                "BF1_1",
                "BF1_0",
                "BF1_3",
                "BF1_2"
            ],
            "selected heuristic value": [
                0.0078125,
                2.0,
                -22
            ],
            "rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 ClosestUnderAndOverlap('P1', 'P2')",
                        11.499884564914762
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimBeforeClosest('P1', 'P0') \u2227 YDimCovers('P0', 'P2')",
                        6.899930738948857
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P2') \u2227 XDimBeforeClosest('P1', 'P0')",
                        4.599953825965905
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P2') \u2227 YDimBefore('P0', 'P1') \u2227 Text('P1',)",
                        32.19967678176133
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P2')",
                        2.2999769129829524
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimCovers('P0', 'P2') \u2227 Text('P1',)",
                        6.899930738948857
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- Text('P1',) \u2227 XDimCovers('P1', 'P0') \u2227 \u00acText('P0',)",
                        9.19990765193181
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- XDimEquals('P2', 'P0') \u2227 Text('P1',)",
                        57.241686821266725
                    ],
                    [
                        "Together('P0', 'P1') <-- ClosestUnderAnd2DimCovered('P1', 'P2') \u2227 YDimOverlapsStart('P0', 'P2')",
                        6.133037873707149
                    ],
                    [
                        "Together('P0', 'P1') <-- XDimCovers('P0', 'P1') \u2227 OnTop('P0', 'P1') \u2227 YDimOverlapsStart('P0', 'P2')",
                        22.487805536926214
                    ]
                ]
            },
            "filtered rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 ClosestUnderAndOverlap('P1', 'P2')",
                        11.499884564914762
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimBeforeClosest('P1', 'P0') \u2227 YDimCovers('P0', 'P2')",
                        6.899930738948857
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P2') \u2227 XDimBeforeClosest('P1', 'P0')",
                        4.599953825965905
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P2') \u2227 YDimBefore('P0', 'P1') \u2227 Text('P1',)",
                        32.19967678176133
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P2')",
                        2.2999769129829524
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimCovers('P0', 'P2') \u2227 Text('P1',)",
                        6.899930738948857
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- Text('P1',) \u2227 XDimCovers('P1', 'P0') \u2227 \u00acText('P0',)",
                        9.19990765193181
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- XDimEquals('P2', 'P0') \u2227 Text('P1',)",
                        57.241686821266725
                    ],
                    [
                        "Together('P0', 'P1') <-- ClosestUnderAnd2DimCovered('P1', 'P2') \u2227 YDimOverlapsStart('P0', 'P2')",
                        6.133037873707149
                    ],
                    [
                        "Together('P0', 'P1') <-- XDimCovers('P0', 'P1') \u2227 OnTop('P0', 'P1') \u2227 YDimOverlapsStart('P0', 'P2')",
                        22.487805536926214
                    ]
                ]
            },
            "order_data": {
                "BF1_0": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_1": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ],
                        [
                            12
                        ],
                        [
                            13
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ],
                        [
                            12
                        ],
                        [
                            13
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_2": {
                    "sequential_order_found_examples": [
                        [
                            9,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            10,
                            5
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            9,
                            10,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": [
                        [
                            6,
                            4
                        ]
                    ]
                },
                "BF1_3": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_4": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                }
            }
        },
        "5": {
            "scores": {
                "DirectlyFollows": {
                    "nb_true_positives": 36,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 0,
                    "f1_score": 1.0
                },
                "Together": {
                    "nb_true_positives": 69,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 0,
                    "f1_score": 1.0
                }
            },
            "time": 28.818151712417603,
            "selected slide": "BF1_4",
            "selected slides:": [
                "BF1_1",
                "BF1_0",
                "BF1_3",
                "BF1_2",
                "BF1_4"
            ],
            "selected heuristic value": [
                0.0078125,
                2.0,
                -22
            ],
            "rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P2') \u2227 YDimBeforeClosest('P0', 'P1')",
                        10.024037149179872
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimBeforeClosest('P1', 'P0') \u2227 YDimCovers('P0', 'P2')",
                        7.518027861884904
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P2') \u2227 XDimBeforeClosest('P1', 'P0')",
                        5.012018574589936
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimEquals('P0', 'P2') \u2227 Text('P1',)",
                        35.08413002212955
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P2')",
                        2.506009287294968
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimCovers('P0', 'P2') \u2227 Text('P1',)",
                        7.518027861884904
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 \u00acText('P0',) \u2227 YDimBefore('P2', 'P0')",
                        2.506009287294968
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 XDimCovers('P1', 'P0') \u2227 \u00acText('P0',)",
                        10.024037149179872
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- XDimEquals('P0', 'P2') \u2227 \u00acImage('P1',)",
                        74.70083341370271
                    ],
                    [
                        "Together('P0', 'P1') <-- ClosestUnderAnd2DimCovered('P1', 'P2') \u2227 YDimOverlapsStart('P0', 'P2')",
                        7.863245622495022
                    ],
                    [
                        "Together('P0', 'P1') <-- YDimOverlapsStart('P0', 'P2') \u2227 YDimCovers('P2', 'P1') \u2227 Text('P1',)",
                        29.487171084356333
                    ]
                ]
            },
            "filtered rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P2') \u2227 YDimBeforeClosest('P0', 'P1')",
                        10.024037149179872
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimBeforeClosest('P1', 'P0') \u2227 YDimCovers('P0', 'P2')",
                        7.518027861884904
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P2') \u2227 XDimBeforeClosest('P1', 'P0')",
                        5.012018574589936
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimEquals('P0', 'P2') \u2227 Text('P1',)",
                        35.08413002212955
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P2')",
                        2.506009287294968
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimCovers('P0', 'P2') \u2227 Text('P1',)",
                        7.518027861884904
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 \u00acText('P0',) \u2227 YDimBefore('P2', 'P0')",
                        2.506009287294968
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 XDimCovers('P1', 'P0') \u2227 \u00acText('P0',)",
                        10.024037149179872
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- XDimEquals('P0', 'P2') \u2227 \u00acImage('P1',)",
                        74.70083341370271
                    ],
                    [
                        "Together('P0', 'P1') <-- ClosestUnderAnd2DimCovered('P1', 'P2') \u2227 YDimOverlapsStart('P0', 'P2')",
                        7.863245622495022
                    ],
                    [
                        "Together('P0', 'P1') <-- YDimOverlapsStart('P0', 'P2') \u2227 YDimCovers('P2', 'P1') \u2227 Text('P1',)",
                        29.487171084356333
                    ]
                ]
            },
            "order_data": {
                "BF1_0": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_1": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ],
                        [
                            12
                        ],
                        [
                            13
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ],
                        [
                            12
                        ],
                        [
                            13
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_2": {
                    "sequential_order_found_examples": [
                        [
                            9,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            10,
                            5
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            9,
                            10,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_3": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_4": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                }
            }
        }
    }
}