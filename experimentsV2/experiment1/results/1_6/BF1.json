{
    "settings": {
        "beam size": 1,
        "min significance": 6,
        "nb pages": 5,
        "all pdf names": [
            "BF1_0",
            "BF1_1",
            "BF1_2",
            "BF1_3",
            "BF1_4"
        ],
        "nb pages filtered": 5,
        "all filtered names": [
            "BF1_0",
            "BF1_1",
            "BF1_2",
            "BF1_3",
            "BF1_4"
        ]
    },
    "data": {
        "1": {
            "scores": {
                "DirectlyFollows": {
                    "nb_true_positives": 0,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 36,
                    "f1_score": 0.0
                },
                "Together": {
                    "nb_true_positives": 0,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 69,
                    "f1_score": 0.0
                }
            },
            "time": 0.008999347686767578,
            "selected slide": "BF1_1",
            "selected slides:": [
                "BF1_1"
            ],
            "selected heuristic value": [
                0.0,
                -Infinity,
                -28
            ],
            "rules": {
                "DirectlyFollows": [],
                "Together": []
            },
            "filtered rules": {
                "DirectlyFollows": [],
                "Together": []
            },
            "order_data": {
                "BF1_0": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_1": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ],
                        [
                            12
                        ],
                        [
                            13
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_2": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            9,
                            10,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_3": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_4": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                }
            }
        },
        "2": {
            "scores": {
                "DirectlyFollows": {
                    "nb_true_positives": 18,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 18,
                    "f1_score": 0.6666666666666666
                },
                "Together": {
                    "nb_true_positives": 64,
                    "nb_false_positives": 1,
                    "nb_false_negatives": 5,
                    "f1_score": 0.9552238805970149
                }
            },
            "time": 1.6026194095611572,
            "selected slide": "BF1_0",
            "selected slides:": [
                "BF1_1",
                "BF1_0"
            ],
            "selected heuristic value": [
                0.003662109375,
                -Infinity,
                -24
            ],
            "rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimBeforeClosest('P1', 'P0') \u2227 YDimCovers('P0', 'P2')",
                        5.970884983233527
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 YDimEquals('P0', 'P2')",
                        3.9805899888223517
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P1') \u2227 XDimBefore('P1', 'P0')",
                        1.9902949944111759
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimEquals('P0', 'P2') \u2227 Text('P1',)",
                        15.922359955289407
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 YDimCovers('P0', 'P2')",
                        1.9902949944111759
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P2')",
                        1.9902949944111759
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P1', 'P0') \u2227 YDimCovers('P0', 'P2') \u2227 Text('P1',)",
                        3.9805899888223517
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- ClosestUnderAnd2DimCovered('P1', 'P0') \u2227 XDimCovers('P2', 'P0')",
                        4.326349263254013
                    ],
                    [
                        "Together('P0', 'P1') <-- XDimEquals('P0', 'P2') \u2227 Text('P1',)",
                        17.30539705301605
                    ],
                    [
                        "Together('P0', 'P1') <-- XDimCovers('P0', 'P1') \u2227 YDimBefore('P0', 'P1') \u2227 ClosestUnderAndOverlap('P1', 'P2')",
                        2.1631746316270064
                    ],
                    [
                        "Together('P0', 'P1') <-- XDimCovers('P0', 'P1') \u2227 YDimBefore('P0', 'P1') \u2227 XDimCovers('P1', 'P2') \u2227 \u00acText('P0',)",
                        6.489523894881019
                    ],
                    [
                        "Together('P0', 'P1') <-- XDimCovers('P0', 'P1') \u2227 YDimBefore('P0', 'P1') \u2227 \u00acText('P0',) \u2227 Text('P1',)",
                        2.1631746316270064
                    ]
                ]
            },
            "filtered rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimEquals('P0', 'P2') \u2227 Text('P1',)",
                        15.922359955289407
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- XDimEquals('P0', 'P2') \u2227 Text('P1',)",
                        17.30539705301605
                    ],
                    [
                        "Together('P0', 'P1') <-- XDimCovers('P0', 'P1') \u2227 YDimBefore('P0', 'P1') \u2227 XDimCovers('P1', 'P2') \u2227 \u00acText('P0',)",
                        6.489523894881019
                    ]
                ]
            },
            "order_data": {
                "BF1_0": {
                    "sequential_order_found_examples": [
                        [
                            9,
                            10,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            11,
                            5
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_1": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10,
                            13
                        ],
                        [
                            12,
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ],
                        [
                            12
                        ],
                        [
                            13
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_2": {
                    "sequential_order_found_examples": [
                        [
                            9,
                            10,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            9,
                            10,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_3": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            11,
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_4": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9,
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                }
            }
        },
        "3": {
            "scores": {
                "DirectlyFollows": {
                    "nb_true_positives": 30,
                    "nb_false_positives": 1,
                    "nb_false_negatives": 6,
                    "f1_score": 0.8955223880597015
                },
                "Together": {
                    "nb_true_positives": 69,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 0,
                    "f1_score": 1.0
                }
            },
            "time": 4.100769758224487,
            "selected slide": "BF1_3",
            "selected slides:": [
                "BF1_1",
                "BF1_0",
                "BF1_3"
            ],
            "selected heuristic value": [
                0.0048828125,
                2.0,
                -24
            ],
            "rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P1') \u2227 XDimBefore('P1', 'P0')",
                        2.278662852400317
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 ClosestUnderAndOverlap('P1', 'P2')",
                        6.8359885572009516
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimBeforeClosest('P1', 'P0') \u2227 YDimCovers('P0', 'P2')",
                        6.8359885572009516
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimEquals('P0', 'P2') \u2227 Text('P1',)",
                        18.229302819202537
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 YDimCovers('P0', 'P2')",
                        2.278662852400317
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P2')",
                        2.278662852400317
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimCovers('P0', 'P2') \u2227 Text('P1',)",
                        4.557325704800634
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 XDimCovers('P1', 'P0') \u2227 \u00acText('P0',)",
                        9.114651409601269
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- ClosestUnderAnd2DimCovered('P1', 'P0') \u2227 XDimCovers('P2', 'P0')",
                        8.113923512916882
                    ],
                    [
                        "Together('P0', 'P1') <-- 2DimCovers('P0', 'P1') \u2227 XDimCovers('P2', 'P0') \u2227 Text('P1',)",
                        32.45569405166753
                    ],
                    [
                        "Together('P0', 'P1') <-- XDimCovers('P0', 'P1') \u2227 YDimBefore('P0', 'P1') \u2227 YDimOverlapsStart('P0', 'P2') \u2227 Text('P1',)",
                        20.284808782292206
                    ]
                ]
            },
            "filtered rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 ClosestUnderAndOverlap('P1', 'P2')",
                        6.8359885572009516
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimBeforeClosest('P1', 'P0') \u2227 YDimCovers('P0', 'P2')",
                        6.8359885572009516
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimEquals('P0', 'P2') \u2227 Text('P1',)",
                        18.229302819202537
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 XDimCovers('P1', 'P0') \u2227 \u00acText('P0',)",
                        9.114651409601269
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- ClosestUnderAnd2DimCovered('P1', 'P0') \u2227 XDimCovers('P2', 'P0')",
                        8.113923512916882
                    ],
                    [
                        "Together('P0', 'P1') <-- 2DimCovers('P0', 'P1') \u2227 XDimCovers('P2', 'P0') \u2227 Text('P1',)",
                        32.45569405166753
                    ],
                    [
                        "Together('P0', 'P1') <-- XDimCovers('P0', 'P1') \u2227 YDimBefore('P0', 'P1') \u2227 YDimOverlapsStart('P0', 'P2') \u2227 Text('P1',)",
                        20.284808782292206
                    ]
                ]
            },
            "order_data": {
                "BF1_0": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_1": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            12,
                            11
                        ],
                        [
                            13
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ],
                        [
                            12
                        ],
                        [
                            13
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_2": {
                    "sequential_order_found_examples": [
                        [
                            9,
                            10,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            9,
                            10,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": [
                        [
                            6,
                            4
                        ]
                    ]
                },
                "BF1_3": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            11,
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_4": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                }
            }
        },
        "4": {
            "scores": {
                "DirectlyFollows": {
                    "nb_true_positives": 32,
                    "nb_false_positives": 1,
                    "nb_false_negatives": 4,
                    "f1_score": 0.927536231884058
                },
                "Together": {
                    "nb_true_positives": 69,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 0,
                    "f1_score": 1.0
                }
            },
            "time": 7.288633823394775,
            "selected slide": "BF1_2",
            "selected slides:": [
                "BF1_1",
                "BF1_0",
                "BF1_3",
                "BF1_2"
            ],
            "selected heuristic value": [
                0.0078125,
                2.0,
                -22
            ],
            "rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P1') \u2227 XDimBefore('P1', 'P0')",
                        4.599953825965905
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 ClosestUnderAndOverlap('P1', 'P2')",
                        11.499884564914762
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimCovers('P0', 'P2') \u2227 Text('P1',)",
                        11.499884564914762
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimEquals('P0', 'P2') \u2227 Text('P1',)",
                        32.19967678176133
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P2')",
                        4.599953825965905
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 XDimCovers('P1', 'P0') \u2227 \u00acText('P0',)",
                        9.19990765193181
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- ClosestUnderAnd2DimCovered('P1', 'P0') \u2227 XDimCovers('P2', 'P0')",
                        12.266075747414298
                    ],
                    [
                        "Together('P0', 'P1') <-- 2DimCovers('P0', 'P1') \u2227 XDimCovers('P2', 'P0') \u2227 Text('P1',)",
                        44.97561107385243
                    ],
                    [
                        "Together('P0', 'P1') <-- XDimCovers('P0', 'P1') \u2227 YDimBefore('P0', 'P1') \u2227 YDimOverlapsStart('P0', 'P2') \u2227 Text('P1',)",
                        28.620843410633363
                    ]
                ]
            },
            "filtered rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 ClosestUnderAndOverlap('P1', 'P2')",
                        11.499884564914762
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimCovers('P0', 'P2') \u2227 Text('P1',)",
                        11.499884564914762
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimEquals('P0', 'P2') \u2227 Text('P1',)",
                        32.19967678176133
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 XDimCovers('P1', 'P0') \u2227 \u00acText('P0',)",
                        9.19990765193181
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- ClosestUnderAnd2DimCovered('P1', 'P0') \u2227 XDimCovers('P2', 'P0')",
                        12.266075747414298
                    ],
                    [
                        "Together('P0', 'P1') <-- 2DimCovers('P0', 'P1') \u2227 XDimCovers('P2', 'P0') \u2227 Text('P1',)",
                        44.97561107385243
                    ],
                    [
                        "Together('P0', 'P1') <-- XDimCovers('P0', 'P1') \u2227 YDimBefore('P0', 'P1') \u2227 YDimOverlapsStart('P0', 'P2') \u2227 Text('P1',)",
                        28.620843410633363
                    ]
                ]
            },
            "order_data": {
                "BF1_0": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_1": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            12,
                            13,
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ],
                        [
                            12
                        ],
                        [
                            13
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_2": {
                    "sequential_order_found_examples": [
                        [
                            9,
                            10,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            9,
                            10,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": [
                        [
                            6,
                            4
                        ]
                    ]
                },
                "BF1_3": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            11,
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_4": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                }
            }
        },
        "5": {
            "scores": {
                "DirectlyFollows": {
                    "nb_true_positives": 31,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 5,
                    "f1_score": 0.9253731343283582
                },
                "Together": {
                    "nb_true_positives": 69,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 0,
                    "f1_score": 1.0
                }
            },
            "time": 12.151136636734009,
            "selected slide": "BF1_4",
            "selected slides:": [
                "BF1_1",
                "BF1_0",
                "BF1_3",
                "BF1_2",
                "BF1_4"
            ],
            "selected heuristic value": [
                0.0078125,
                2.0,
                -22
            ],
            "rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P1') \u2227 XDimBefore('P1', 'P0')",
                        5.012018574589936
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 YDimEquals('P0', 'P2')",
                        10.024037149179872
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimCovers('P0', 'P2') \u2227 Text('P1',)",
                        12.53004643647484
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P2') \u2227 YDimBefore('P0', 'P1') \u2227 Text('P1',)",
                        35.08413002212955
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P2')",
                        5.012018574589936
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 ClosestUnderAndOverlap('P1', 'P2') \u2227 YDimBefore('P3', 'P0')",
                        2.506009287294968
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 XDimCovers('P1', 'P0') \u2227 \u00acText('P0',)",
                        10.024037149179872
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- ClosestUnderAnd2DimCovered('P1', 'P0') \u2227 XDimCovers('P2', 'P0')",
                        15.726491244990044
                    ],
                    [
                        "Together('P0', 'P1') <-- 2DimCovers('P0', 'P1') \u2227 XDimCovers('P2', 'P0') \u2227 Text('P1',)",
                        58.97434216871267
                    ],
                    [
                        "Together('P0', 'P1') <-- XDimCovers('P0', 'P1') \u2227 YDimBefore('P0', 'P1') \u2227 YDimOverlapsStart('P0', 'P2') \u2227 Text('P1',)",
                        37.350416706851355
                    ]
                ]
            },
            "filtered rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBeforeClosest('P0', 'P1') \u2227 YDimEquals('P0', 'P2')",
                        10.024037149179872
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 YDimCovers('P0', 'P2') \u2227 Text('P1',)",
                        12.53004643647484
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimEquals('P0', 'P2') \u2227 YDimBefore('P0', 'P1') \u2227 Text('P1',)",
                        35.08413002212955
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 XDimCovers('P1', 'P0') \u2227 \u00acText('P0',)",
                        10.024037149179872
                    ]
                ],
                "Together": [
                    [
                        "Together('P0', 'P1') <-- ClosestUnderAnd2DimCovered('P1', 'P0') \u2227 XDimCovers('P2', 'P0')",
                        15.726491244990044
                    ],
                    [
                        "Together('P0', 'P1') <-- 2DimCovers('P0', 'P1') \u2227 XDimCovers('P2', 'P0') \u2227 Text('P1',)",
                        58.97434216871267
                    ],
                    [
                        "Together('P0', 'P1') <-- XDimCovers('P0', 'P1') \u2227 YDimBefore('P0', 'P1') \u2227 YDimOverlapsStart('P0', 'P2') \u2227 Text('P1',)",
                        37.350416706851355
                    ]
                ]
            },
            "order_data": {
                "BF1_0": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_1": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            12,
                            13,
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5,
                            9,
                            10
                        ],
                        [
                            11
                        ],
                        [
                            12
                        ],
                        [
                            13
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_2": {
                    "sequential_order_found_examples": [
                        [
                            9,
                            10,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            9,
                            10,
                            0,
                            1,
                            2,
                            3,
                            4,
                            6,
                            7,
                            8,
                            5
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_3": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            11,
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ],
                        [
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "BF1_4": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7,
                            4,
                            8,
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                }
            }
        }
    }
}