{
    "settings": {
        "beam size": 1,
        "min significance": 3,
        "nb pages": 7,
        "all pdf names": [
            "US1_0",
            "US1_1",
            "US1_2",
            "US1_3",
            "US1_4",
            "US1_5",
            "US1_6"
        ],
        "nb pages filtered": 4,
        "all filtered names": [
            "US1_0",
            "US1_1",
            "US1_2",
            "US1_3"
        ]
    },
    "data": {
        "1": {
            "scores": {
                "DirectlyFollows": {
                    "nb_true_positives": 0,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 19,
                    "f1_score": 0.0
                },
                "Together": {
                    "nb_true_positives": 0,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 8,
                    "f1_score": 0.0
                }
            },
            "time": 0.012998580932617188,
            "selected slide": "US1_3",
            "selected slides:": [
                "US1_3"
            ],
            "selected heuristic value": [
                0.0,
                -Infinity,
                -30
            ],
            "rules": {
                "DirectlyFollows": [],
                "Together": []
            },
            "filtered rules": {
                "DirectlyFollows": [],
                "Together": []
            },
            "order_data": {
                "US1_0": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "US1_1": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            7
                        ],
                        [
                            2
                        ],
                        [
                            3,
                            4,
                            5,
                            6
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "US1_2": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1
                        ],
                        [
                            2
                        ],
                        [
                            3
                        ],
                        [
                            4
                        ],
                        [
                            5
                        ],
                        [
                            6
                        ],
                        [
                            8,
                            7,
                            9,
                            10,
                            11,
                            12,
                            13
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "US1_3": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            12,
                            13,
                            14
                        ],
                        [
                            3
                        ],
                        [
                            4
                        ],
                        [
                            5
                        ],
                        [
                            6
                        ],
                        [
                            7
                        ],
                        [
                            8
                        ],
                        [
                            11
                        ],
                        [
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                }
            }
        },
        "2": {
            "scores": {
                "DirectlyFollows": {
                    "nb_true_positives": 2,
                    "nb_false_positives": 3,
                    "nb_false_negatives": 17,
                    "f1_score": 0.16666666666666666
                },
                "Together": {
                    "nb_true_positives": 0,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 8,
                    "f1_score": 0.0
                }
            },
            "time": 1.1988353729248047,
            "selected slide": "US1_0",
            "selected slides:": [
                "US1_3",
                "US1_0"
            ],
            "selected heuristic value": [
                0.0,
                -Infinity,
                -24
            ],
            "rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 \u00acOnTop('P0', 'P1') \u2227 \u00acXDimCovers('P1', 'P0')",
                        2.7604224834232123
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P1') \u2227 XDimBefore('P0', 'P2') \u2227 YDimBefore('P2', 'P0') \u2227 \u00acXDimCovers('P0', 'P1')",
                        3.8992042325724
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimCovers('P0', 'P1') \u2227 YDimBefore('P0', 'P1') \u2227 XDimCovers('P2', 'P0') \u2227 \u00acYDimBefore('P0', 'P2') \u2227 XDimCovers('P1', 'P3') \u2227 XDimBefore('P1', 'P4')",
                        2.7604224834232123
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 XDimCovers('P0', 'P1') \u2227 XDimCovers('P2', 'P0') \u2227 \u00acYDimBefore('P0', 'P2') \u2227 XDimCovers('P3', 'P2')",
                        1.5932693121553136
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 XDimOverlapsStart('P0', 'P1') \u2227 XDimOverlapsStart('P1', 'P2') \u2227 XDimCovers('P2', 'P1') \u2227 \u00acXDimCovers('P1', 'P0') \u2227 XDimCovers('P1', 'P3') \u2227 XDimCovers('P0', 'P3')",
                        2.7604224834232123
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P1') \u2227 \u00acXDimCovers('P0', 'P1') \u2227 YDimBefore('P2', 'P0') \u2227 XDimCovers('P2', 'P1') \u2227 XDimCovers('P3', 'P2')",
                        2.7604224834232123
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- YDimBefore('P0', 'P1') \u2227 XDimOverlapsStart('P0', 'P1') \u2227 XDimOverlapsStart('P1', 'P2') \u2227 XDimCovers('P2', 'P1') \u2227 \u00acXDimCovers('P1', 'P0') \u2227 XDimCovers('P1', 'P3') \u2227 \u00acXDimOverlapsStart('P0', 'P3')",
                        1.1757485605372147
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P1') \u2227 \u00acXDimCovers('P0', 'P1') \u2227 YDimBefore('P2', 'P0') \u2227 XDimCovers('P0', 'P2') \u2227 XDimCovers('P3', 'P1') \u2227 XDimCovers('P4', 'P3') \u2227 XDimCovers('P1', 'P5')",
                        2.7604224834232123
                    ]
                ],
                "Together": []
            },
            "filtered rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P1') \u2227 XDimBefore('P0', 'P2') \u2227 YDimBefore('P2', 'P0') \u2227 \u00acXDimCovers('P0', 'P1')",
                        3.8992042325724
                    ]
                ],
                "Together": []
            },
            "order_data": {
                "US1_0": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "US1_1": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            7
                        ],
                        [
                            2
                        ],
                        [
                            3,
                            4,
                            5,
                            6
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "US1_2": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            4,
                            5,
                            6,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13
                        ],
                        [
                            3,
                            7
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1
                        ],
                        [
                            2
                        ],
                        [
                            3
                        ],
                        [
                            4
                        ],
                        [
                            5
                        ],
                        [
                            6
                        ],
                        [
                            8,
                            7,
                            9,
                            10,
                            11,
                            12,
                            13
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "US1_3": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            4,
                            5,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14
                        ],
                        [
                            3,
                            6
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            12,
                            13,
                            14
                        ],
                        [
                            3
                        ],
                        [
                            4
                        ],
                        [
                            5
                        ],
                        [
                            6
                        ],
                        [
                            7
                        ],
                        [
                            8
                        ],
                        [
                            11
                        ],
                        [
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                }
            }
        },
        "3": {
            "scores": {
                "DirectlyFollows": {
                    "nb_true_positives": 10,
                    "nb_false_positives": 13,
                    "nb_false_negatives": 9,
                    "f1_score": 0.47619047619047616
                },
                "Together": {
                    "nb_true_positives": 0,
                    "nb_false_positives": 0,
                    "nb_false_negatives": 8,
                    "f1_score": 0.0
                }
            },
            "time": 49.40224361419678,
            "selected slide": "US1_2",
            "selected slides:": [
                "US1_3",
                "US1_0",
                "US1_2"
            ],
            "selected heuristic value": [
                0.0008544921875,
                -Infinity,
                -28
            ],
            "rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P1') \u2227 XDimBefore('P0', 'P2') \u2227 YDimBefore('P2', 'P0') \u2227 \u00acXDimCovers('P0', 'P1')",
                        4.771623188252726
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P1') \u2227 XDimBefore('P1', 'P2') \u2227 XDimBefore('P2', 'P3') \u2227 XDimCovers('P0', 'P3')",
                        3.2041199826559246
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P1', 'P0') \u2227 XDimCovers('P0', 'P1') \u2227 XDimCovers('P2', 'P0') \u2227 \u00acYDimBefore('P0', 'P2') \u2227 YDimBefore('P0', 'P1') \u2227 XDimCovers('P1', 'P3') \u2227 XDimBefore('P1', 'P4')",
                        3.2041199826559246
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P0', 'P1') \u2227 YDimBefore('P0', 'P1') \u2227 \u00acOnTop('P0', 'P1') \u2227 XDimBefore('P0', 'P2')",
                        3.2041199826559246
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P1', 'P0') \u2227 XDimCovers('P0', 'P1') \u2227 XDimCovers('P2', 'P0') \u2227 \u00acYDimBefore('P0', 'P2') \u2227 XDimCovers('P3', 'P2') \u2227 YDimBefore('P0', 'P1')",
                        2.021990768602927
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P0', 'P1') \u2227 OnTop('P0', 'P1') \u2227 XDimOverlapsStart('P1', 'P2') \u2227 XDimCovers('P2', 'P1') \u2227 \u00acXDimCovers('P1', 'P0') \u2227 XDimCovers('P1', 'P3') \u2227 XDimCovers('P0', 'P3')",
                        3.2041199826559246
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P1') \u2227 \u00acXDimCovers('P0', 'P1') \u2227 YDimBefore('P2', 'P0') \u2227 XDimCovers('P0', 'P2') \u2227 XDimCovers('P3', 'P1') \u2227 XDimCovers('P4', 'P3') \u2227 XDimCovers('P1', 'P5')",
                        3.2041199826559246
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P0', 'P1') \u2227 OnTop('P0', 'P1') \u2227 XDimOverlapsStart('P1', 'P2') \u2227 XDimCovers('P2', 'P1') \u2227 \u00acXDimCovers('P1', 'P0') \u2227 XDimCovers('P1', 'P3') \u2227 \u00acXDimOverlapsStart('P0', 'P3')",
                        1.5894939741997276
                    ]
                ],
                "Together": []
            },
            "filtered rules": {
                "DirectlyFollows": [
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P1') \u2227 XDimBefore('P0', 'P2') \u2227 YDimBefore('P2', 'P0') \u2227 \u00acXDimCovers('P0', 'P1')",
                        4.771623188252726
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P1') \u2227 XDimBefore('P1', 'P2') \u2227 XDimBefore('P2', 'P3') \u2227 XDimCovers('P0', 'P3')",
                        3.2041199826559246
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P1', 'P0') \u2227 XDimCovers('P0', 'P1') \u2227 XDimCovers('P2', 'P0') \u2227 \u00acYDimBefore('P0', 'P2') \u2227 YDimBefore('P0', 'P1') \u2227 XDimCovers('P1', 'P3') \u2227 XDimBefore('P1', 'P4')",
                        3.2041199826559246
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P0', 'P1') \u2227 YDimBefore('P0', 'P1') \u2227 \u00acOnTop('P0', 'P1') \u2227 XDimBefore('P0', 'P2')",
                        3.2041199826559246
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P0', 'P1') \u2227 OnTop('P0', 'P1') \u2227 XDimOverlapsStart('P1', 'P2') \u2227 XDimCovers('P2', 'P1') \u2227 \u00acXDimCovers('P1', 'P0') \u2227 XDimCovers('P1', 'P3') \u2227 XDimCovers('P0', 'P3')",
                        3.2041199826559246
                    ],
                    [
                        "DirectlyFollows('P0', 'P1') <-- XDimOverlapsStart('P1', 'P0') \u2227 YDimBefore('P0', 'P1') \u2227 \u00acXDimCovers('P0', 'P1') \u2227 YDimBefore('P2', 'P0') \u2227 XDimCovers('P0', 'P2') \u2227 XDimCovers('P3', 'P1') \u2227 XDimCovers('P4', 'P3') \u2227 XDimCovers('P1', 'P5')",
                        3.2041199826559246
                    ]
                ],
                "Together": []
            },
            "order_data": {
                "US1_0": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "US1_1": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            3,
                            5,
                            6,
                            7
                        ],
                        [
                            4
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            7
                        ],
                        [
                            2
                        ],
                        [
                            3,
                            4,
                            5,
                            6
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "US1_2": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            9,
                            11,
                            12,
                            13
                        ],
                        [
                            7,
                            3,
                            10
                        ],
                        [
                            4,
                            5
                        ],
                        [
                            6,
                            8
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1
                        ],
                        [
                            2
                        ],
                        [
                            3
                        ],
                        [
                            4
                        ],
                        [
                            5
                        ],
                        [
                            6
                        ],
                        [
                            8,
                            7,
                            9,
                            10,
                            11,
                            12,
                            13
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                },
                "US1_3": {
                    "sequential_order_found_examples": [
                        [
                            0,
                            1,
                            2,
                            4,
                            8,
                            12,
                            13,
                            14
                        ],
                        [
                            3,
                            5,
                            11
                        ],
                        [
                            6,
                            9
                        ],
                        [
                            7,
                            10
                        ]
                    ],
                    "sequential_order_true_examples": [
                        [
                            0,
                            1,
                            2,
                            12,
                            13,
                            14
                        ],
                        [
                            3
                        ],
                        [
                            4
                        ],
                        [
                            5
                        ],
                        [
                            6
                        ],
                        [
                            7
                        ],
                        [
                            8
                        ],
                        [
                            11
                        ],
                        [
                            9
                        ],
                        [
                            10
                        ]
                    ],
                    "all_included_found": true,
                    "all_included_true": true,
                    "contradictions": []
                }
            }
        }
    }
}